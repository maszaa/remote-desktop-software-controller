"""
Django settings for app project.

Generated by 'django-admin startproject' using Django 3.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import logging
import os
import socket
import sys
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!

FROZEN_EXE = getattr(sys, "frozen", False) and hasattr(sys, "_MEIPASS")

APP_NAME = "RDSC"
APP_DATA_PATH = os.path.join(os.environ.get("LOCALAPPDATA"), APP_NAME)

if FROZEN_EXE and not os.path.isdir(APP_DATA_PATH):
    os.makedirs(APP_DATA_PATH)

SECRET_KEY_FILE = "secretkey.txt"

if FROZEN_EXE:
    SECRET_KEY_FILE = os.path.join(APP_DATA_PATH, SECRET_KEY_FILE)

try:
    with open(SECRET_KEY_FILE, "r") as f:
        SECRET_KEY = f.read()
except IOError:
    SECRET_KEY = "developmentsecret"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = [
    socket.gethostbyname(socket.gethostname()),
    "127.0.0.1",
    "localhost",
    "rdsc",
]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "app",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "app.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, "templates")],
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
            "loaders": [
                (
                    "pypugjs.ext.django.Loader",
                    (
                        "django.template.loaders.filesystem.Loader",
                        "django.template.loaders.app_directories.Loader",
                    ),
                )
            ],
            "builtins": [
                "pypugjs.ext.django.templatetags",
            ],
        },
    },
]

WSGI_APPLICATION = "app.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASE_NAME = "db.sqlite3"

if FROZEN_EXE:
    DATABASE_NAME = os.path.join(APP_DATA_PATH, DATABASE_NAME)
else:
    DATABASE_NAME = os.path.join(BASE_DIR, DATABASE_NAME)

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": DATABASE_NAME,
    }
}

DEFAULT_AUTO_FIELD = "django.db.models.AutoField"


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = "/static/"
STATIC_ROOT = os.path.join(BASE_DIR if not FROZEN_EXE else APP_DATA_PATH, "static")

# Project settings
SCREENSHOT_IMAGE_FORMAT = "png"

LOGGER = logging.getLogger("django.server")
LOGGER.setLevel(logging.DEBUG)

GRAPH_MODELS = {
    "app_labels": ["app"],
}

LOGIN_URL = "/admin/login/"

SESSION_COOKIE_AGE = 60 * 60 * 24 * 365  # One year in seconds
SESSION_ENGINE = "django.contrib.sessions.backends.db"
